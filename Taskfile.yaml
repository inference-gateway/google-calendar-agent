---
version: "3"

tasks:
  default:
    desc: "Show help information"
    cmds:
      - task --list

  a2a:download:schema:
    desc: "Download the latest A2A schema and convert to YAML"
    cmds:
      - mkdir -p a2a
      - curl -o a2a/schema.yaml https://raw.githubusercontent.com/inference-gateway/schemas/refs/heads/main/a2a/a2a-schema.yaml

  generate:
    desc: "Generate Go code from the official A2A JSON RPC Schema"
    cmds:
      - go run github.com/inference-gateway/tools/cmd/generator@v0.1.1 -generator jsonrpc -package a2a a2a/schema.yaml a2a/generated_types.go

  tidy:
    desc: "Run go mod tidy to clean up dependencies"
    cmds:
      - echo "Running go mod tidy..."
      - go mod tidy

  lint:
    desc: "Run linters on the codebase"
    cmds:
      - echo "Running linters..."
      - golangci-lint run

  build:
    desc: "Build the project with version information"
    cmds:
      - echo "Building the project..."
      - |
        VERSION=$(git describe --tags --always --dirty)
        COMMIT=$(git rev-parse HEAD)
        DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        go build -ldflags "-X main.version=${VERSION} -X main.commit=${COMMIT} -X main.date=${DATE}" -o dist/agent ./cmd/agent

  build:dev:
    desc: "Build the project for development (no version information)"
    cmds:
      - echo "Building the project for development..."
      - go build -o dist/agent ./cmd/agent

  build:docker:
    desc: "Build the Docker image with version information"
    cmds:
      - echo "Building Docker image..."
      - |
        VERSION=$(git describe --tags --always --dirty)
        COMMIT=$(git rev-parse HEAD)
        DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        docker build \
          --build-arg VERSION="${VERSION}" \
          --build-arg COMMIT="${COMMIT}" \
          --build-arg DATE="${DATE}" \
          -t ghcr.io/inference-gateway/google-calendar-agent:latest \
          -t ghcr.io/inference-gateway/google-calendar-agent:${VERSION} \
          .

  test:
    desc: "Run tests"
    cmds:
      - echo "Running tests..."
      - go test ./...

  test:coverage:
    desc: "Run tests with coverage"
    cmds:
      - echo "Running tests with coverage..."
      - go test -cover ./...

  clean:
    desc: "Clean up build artifacts"
    cmds:
      - echo "Cleaning up..."
      - rm -rf dist/
      - rm -f *.out
